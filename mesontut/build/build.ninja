# This is the build file for project "tutorial"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = cc  $ARGS '-MMD' '-MQ' $out '-MF' '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling c object $out

rule c_PCH
 command = cc  $ARGS '-MMD' '-MQ' $out '-MF' '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in


# Rules for linking.

rule STATIC_LINKER
 command = ar $LINK_ARGS $out $in
 description = Static linking library $out

rule c_LINKER
 command = cc  $ARGS  -o $out $in $LINK_ARGS $aliasing
 description = Linking target $out

rule SHSYM
 command = "/usr/bin/python3" "/home/msr/source-files/meson/meson.py" --internal symbolextractor $in $out $CROSS
 restat = 1
 description = Generating symbol file $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' --internal regenerate '/home/msr/research/c++/mesontut' '/home/msr/research/c++/mesontut/build' --backend ninja
 description = Regenerating build files
 generator = 1


# Phony build target, always out of date
build PHONY: phony

# Build rules for targets

build demo@exe/main.c.o: c_COMPILER ../main.c
 DEPFILE = demo@exe/main.c.o.d
 ARGS = '-Idemo@exe' '-fdiagnostics-color=always' '-I..' '-I.' '-pipe' '-Wall' '-Winvalid-pch' '-O0' '-g'

build demo: c_LINKER demo@exe/main.c.o
 LINK_ARGS = '-Wl,--no-undefined'

# Test rules

build test: CUSTOM_COMMAND all PHONY
 COMMAND = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' '--internal' 'test' '/home/msr/research/c++/mesontut/build/meson-private/meson_test_setup.dat'
 DESC = Running$ all$ tests.
 pool = console

build test-valgrind: CUSTOM_COMMAND all PHONY
 COMMAND = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' '--internal' 'test' '/home/msr/research/c++/mesontut/build/meson-private/meson_test_setup.dat' '--wrapper=valgrind'
 DESC = Running$ test$ suite$ under$ Valgrind.
 pool = console

build benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' '--internal' 'benchmark' '/home/msr/research/c++/mesontut/build/meson-private/meson_benchmark_setup.dat'
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' '--internal' 'install' '/home/msr/research/c++/mesontut/build/meson-private/install.dat'
 pool = console

# Suffix

build scan-build: CUSTOM_COMMAND PHONY
 COMMAND = '/usr/bin/python3' '/home/msr/source-files/meson/meson.py' '--internal' 'scanbuild' '/home/msr/research/c++/mesontut' '/home/msr/research/c++/mesontut/build' '/usr/bin/python3' '/home/msr/source-files/meson/meson.py'
 pool = console

build all: phony demo

default all

build clean: CUSTOM_COMMAND PHONY
 COMMAND = 'ninja' '-t' 'clean'
 description = 'Cleaning'

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

