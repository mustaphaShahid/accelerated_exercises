!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GUARD_Student_info	Student_info.hpp	2;"	d
GUARD_Student_info	vector_grading/Student_info.hpp	2;"	d
GUARD_grade_h	grade.hpp	2;"	d
GUARD_grade_h	vector_grading/grade.hpp	2;"	d
GUARD_median_h	median.hpp	2;"	d
GUARD_median_h	vector_grading/median.hpp	2;"	d
Student_info	Student_info.hpp	/^struct Student_info {$/;"	s
Student_info	vector_grading/Student_info.hpp	/^struct Student_info {$/;"	s
compare	Student_info.cpp	/^bool compare(const Student_info& x, const Student_info& y)$/;"	f
compare	vector_grading/Student_info.cpp	/^bool compare(const Student_info& x, const Student_info& y)$/;"	f
extract_fails	grade.cpp	/^list<Student_info> extract_fails(list<Student_info>& students)$/;"	f
fgrade	grade.cpp	/^bool fgrade(const Student_info& s)$/;"	f
final	Student_info.hpp	/^        double midterm, final;$/;"	m	struct:Student_info
final	vector_grading/Student_info.hpp	/^        double midterm, final;$/;"	m	struct:Student_info
grade	grade.cpp	/^double grade(const Student_info& s)$/;"	f
grade	grade.cpp	/^double grade(double midterm, double final, const vector<double>& hw)$/;"	f
grade	grade.cpp	/^double grade(double midterm, double final, double homework)$/;"	f
grade	vector_grading/grade.cpp	/^double grade(const Student_info& s)$/;"	f
grade	vector_grading/grade.cpp	/^double grade(double midterm, double final, const std::vector<double>& hw)$/;"	f
grade	vector_grading/grade.cpp	/^double grade(double midterm, double final, double homework)$/;"	f
homework	Student_info.hpp	/^        std::vector<double> homework;$/;"	m	struct:Student_info
homework	vector_grading/Student_info.hpp	/^        std::vector<double> homework;$/;"	m	struct:Student_info
main	build/meson-private/sanitycheckcpp.cc	/^class breakCCompiler;int main(int argc, char **argv) { return 0; }$/;"	f
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	vector_grading/main.cpp	/^int main(int argc, char *argv[])$/;"	f
median	median.cpp	/^double median(vector<double> vec)$/;"	f
median	vector_grading/median.cpp	/^double median(vector<double> vec)$/;"	f
midterm	Student_info.hpp	/^        double midterm, final;$/;"	m	struct:Student_info
midterm	vector_grading/Student_info.hpp	/^        double midterm, final;$/;"	m	struct:Student_info
name	Student_info.hpp	/^        std::string name;$/;"	m	struct:Student_info
name	vector_grading/Student_info.hpp	/^        std::string name;$/;"	m	struct:Student_info
read	Student_info.cpp	/^std::istream& read(std::istream& is, Student_info& s)$/;"	f
read	vector_grading/Student_info.cpp	/^std::istream& read(std::istream& is, Student_info& s)$/;"	f
read_hw	Student_info.cpp	/^istream& read_hw(istream& in, vector<double>& hw)$/;"	f
read_hw	vector_grading/Student_info.cpp	/^std::istream& read_hw(std::istream& in, std::vector<double>& hw)$/;"	f
students_print	Student_info.cpp	/^void students_print(const list<Student_info>& students, string::size_type maxlen)$/;"	f
